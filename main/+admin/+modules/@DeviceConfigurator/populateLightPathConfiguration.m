function populateLightPathConfiguration(obj)
% We assume light path configs are just filter wheels at this point
import appbox.*;
devs = obj.lightPathDevices;
aes = obj.aes;
fontname = aes{find(cellfun(@(v)isequal(v,'FontName'),aes,'UniformOutput',true),1,'first')+1};
n = numel(devs);
s = obj.controlBlocks('lightpath');
nBtnGrps = zeros(1,n);
for L = 1:n
  % loop through filter wheel device and create a wheel name and
  % button group of "Count" positions.
  this = devs{L};
  name = this.name;
  % create a box and fill it with n Wheels controls
  b = struct();
  b.layout = uix.VBox( ...
    'Parent', s.adjustable, ...
    'Spacing', 2, ...
    'Padding', 0, ...
    'BackgroundColor', [1,1,1] ...
    );
  uicontrol(  ...
    b.layout, ...
    'style', 'text', ...
    'String', name, ...
    'FontSize', 10, ...
    'HorizontalAlignment', 'center', ...
    'BackgroundColor', [1,1,1], ...
    'FontName', fontname ...
    );
  %Label( ...
  %  'Parent', b.layout, ...
  %  'String', name, ...
  %  'BackgroundColor', 'white', ...
  %  'HorizontalAlignment', 'center' ...
  %  );
  b.internal = cell(1,this.WheelCount);
  b.buttonGroups = containers.Map();
  for w = 1:this.WheelCount
    % activate the current wheel to collect properties
    this.update([],w);
    
    
    b.internal{w} = uix.HBox( ...
      'Parent',b.layout, ...
      'Spacing', 1, ...
      'Padding', 0, ...
      'BackgroundColor', [1,1,1] ...
      );
    Label( ...
      'Parent', b.internal{w}, ...
      'String', sprintf('%s: ',this.WheelId), ...
      'BackgroundColor', 'white', ...
      'HorizontalAlignment', 'right' ...
      );
    
    nButtons = this.Count;
    
    buttonLabels = cellstr(string(1:nButtons));
    
    bGroup = uix.HButtonGroup( ...
      'Parent', b.internal{w}, ...
      'ButtonStyle', 'toggle', ...
      'Tag', sprintf('%s|%s',this.name,this.WheelId), ...
      'Buttons', buttonLabels, ...
      'ButtonSize', [50,23], ...
      'HorizontalAlignment', 'right', ...
      'Selection', str2double(this.Position), ...
      'SelectionChangeFcn', @obj.onLightPathConfigured ...
      );
    % create tooltips carrying the wheel Labels
    hButtons = bGroup.ButtonHandles;
    bLabs = this.Labels;
    for bx = 1:numel(hButtons)
      hButtons(bx).Tooltip = bLabs{bx};
      hButtons(bx).FontSize = 11;
      hButtons(bx).BackgroundColor = 'w';
    end
    
    % store the groups
    b.buttonGroups(this.WheelId) = bGroup;
    set(b.internal{w},'Widths', [110,-1]);
  end
  b.layout.Heights = [12,admin.utils.rep(-1,this.WheelCount,1,'dims',{1,[]})];
  s.components(name) = b;
  nBtnGrps(L) = double(this.WheelCount);
end
% set the button heights according to their contents
s.adjustable.Heights = -(nBtnGrps+1);

obj.controlBlocks('lightpath') = s;
end